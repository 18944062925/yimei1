<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yimeimaven.dao.OrdersDao">
  <resultMap id="BaseResultMap" type="com.example.yimeimaven.entity.Orders">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="order_date" jdbcType="DATE" property="orderDate" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="setmeal_id" jdbcType="INTEGER" property="setmealId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    id, member_id, order_date, order_status, setmeal_id, `name`, sex, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.yimeimaven.entity.Orders" useGeneratedKeys="true">
    insert into orders (member_id, order_date, order_status, 
      setmeal_id, `name`, sex, 
      phone)
    values (#{memberId,jdbcType=INTEGER}, #{orderDate,jdbcType=DATE}, #{orderStatus,jdbcType=INTEGER}, 
      #{setmealId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.yimeimaven.entity.Orders" useGeneratedKeys="true">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="setmealId != null">
        setmeal_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="setmealId != null">
        #{setmealId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yimeimaven.entity.Orders">
    update orders
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="setmealId != null">
        setmeal_id = #{setmealId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.yimeimaven.entity.Orders">
    update orders
    set member_id = #{memberId,jdbcType=INTEGER},
      order_date = #{orderDate,jdbcType=DATE},
      order_status = #{orderStatus,jdbcType=INTEGER},
      setmeal_id = #{setmealId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>